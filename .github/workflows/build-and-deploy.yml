# This workflow will build a MuleSoft project and deploy to CloudHub
name: Build and Deploy Mule Application

on:
  pull_request:
    types: [ closed ]
    branches: [ main, qa, dev ]
  workflow_dispatch:
    
jobs:
  prepare:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
        environment: ${{ steps.set_vars.outputs.environment }}
        appNameSuffix: ${{ steps.set_vars.outputs.appNameSuffix }}
    steps:
    - name: Extract branch name
      id: extract_branch
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      
    - name: Print branch name
      run: echo "Branch ${{ steps.extract_branch.outputs.branch }}"
    
    - name: Set variables
      id: set_vars
      run: |
        echo "::set-output name=environment::${{ steps.extract_branch.outputs.branch }}"
        if [[ "${{ steps.extract_branch.outputs.branch }}" != "main" ]]; then
          echo "##[set-output name=appNameSuffix;]$(echo "-${{ steps.extract_branch.outputs.branch }}" | tr '[:upper:]' '[:lower:]')"
        fi
    
    - name: Print variables
      run: |
        echo "Env ${{ steps.set_vars.outputs.environment }}"
        echo "Suffix ${{ steps.set_vars.outputs.appNameSuffix }}"
      
  build:
    runs-on: ubuntu-latest
    needs: prepare
    environment:
        name: ${{ needs.prepare.outputs.environment }}
    steps:
    - uses: actions/checkout@v3

    - uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '8'
    
    - name: Print effective-settings (optional)
      run: mvn help:effective-settings
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    
    - name: Upload artifact 
      uses: actions/upload-artifact@master
      with:
          name: artifacts
          path: target/*.jar
        
  deploy:
    needs: [prepare, build]
    runs-on: ubuntu-latest

    steps: 
    - uses: actions/checkout@v3
    
    - uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - uses: actions/download-artifact@master
      with:
        name: artifacts
    
    - name: Deploy to CloudHub Environment
      env:
        ENVIRONMENT: ${{ needs.prepare.outputs.environment }}
        APP_NAME_SUFFIX: ${{ needs.prepare.outputs.appNameSuffix }}
        CONN_APP_CLIENT_ID: ${{ secrets.CONN_APP_CLIENT_ID }}
        CONN_APP_CLIENT_SECRET: ${{ secrets.CONN_APP_CLIENT_SECRET }}
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn deploy -DmuleDeploy \
         -Dmule.artifact=$artifactName \
         -Denv.environment="$ENVIRONMENT" \
         -Denv.appNameSuffix="$APP_NAME_SUFFIX" \
         -Denv.connAppClientID="$CONN_APP_CLIENT_ID" \
         -Denv.connAppClientSecret="$CONN_APP_CLIENT_SECRET"
